package com.courseplatform.dao;

import com.courseplatform.bean.TestReports;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

@Component
public interface TestReportsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_reports
     *
     * @mbggenerated Thu Dec 08 11:15:00 CST 2016
     */
    @Delete({
        "delete from test_reports",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_reports
     *
     * @mbggenerated Thu Dec 08 11:15:00 CST 2016
     */
    @Insert({
        "insert into test_reports (id, course_id, ",
        "teacher_account, student_account, ",
        "filepath, time)",
        "values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=VARCHAR}, ",
        "#{teacherAccount,jdbcType=VARCHAR}, #{studentAccount,jdbcType=VARCHAR}, ",
        "#{filepath,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP})"
    })
    int insert(TestReports record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_reports
     *
     * @mbggenerated Thu Dec 08 11:15:00 CST 2016
     */
    @Select({
        "select",
        "id, course_id, teacher_account, student_account, filepath, time",
        "from test_reports",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="course_id", property="courseId", jdbcType=JdbcType.VARCHAR),
        @Result(column="teacher_account", property="teacherAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="student_account", property="studentAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="filepath", property="filepath", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP)
    })
    TestReports selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_reports
     *
     * @mbggenerated Thu Dec 08 11:15:00 CST 2016
     */
    @Select({
        "select",
        "id, course_id, teacher_account, student_account, filepath, time",
        "from test_reports"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="course_id", property="courseId", jdbcType=JdbcType.VARCHAR),
        @Result(column="teacher_account", property="teacherAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="student_account", property="studentAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="filepath", property="filepath", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP)
    })
    List<TestReports> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_reports
     *
     * @mbggenerated Thu Dec 08 11:15:00 CST 2016
     */
    @Update({
        "update test_reports",
        "set course_id = #{courseId,jdbcType=VARCHAR},",
          "teacher_account = #{teacherAccount,jdbcType=VARCHAR},",
          "student_account = #{studentAccount,jdbcType=VARCHAR},",
          "filepath = #{filepath,jdbcType=VARCHAR},",
          "time = #{time,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TestReports record);
}