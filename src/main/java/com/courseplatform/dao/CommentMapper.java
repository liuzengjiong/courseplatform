package com.courseplatform.dao;

import com.courseplatform.bean.Comment;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

@Component
public interface CommentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Fri Dec 09 17:24:58 CST 2016
     */
    @Delete({
        "delete from comment",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Fri Dec 09 17:24:58 CST 2016
     */
    @Insert({
        "insert into comment (id, course_id, ",
        "teacher_acccount, student_account, ",
        "content, time, ",
        "type, floor)",
        "values (#{id,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, ",
        "#{teacherAcccount,jdbcType=VARCHAR}, #{studentAccount,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, ",
        "#{type,jdbcType=INTEGER}, #{floor,jdbcType=INTEGER})"
    })
    int insert(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Fri Dec 09 17:24:58 CST 2016
     */
    @Select({
        "select",
        "id, course_id, teacher_acccount, student_account, content, time, type, floor",
        "from comment",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="course_id", property="courseId", jdbcType=JdbcType.VARCHAR),
        @Result(column="teacher_acccount", property="teacherAcccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="student_account", property="studentAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="floor", property="floor", jdbcType=JdbcType.INTEGER)
    })
    Comment selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Fri Dec 09 17:24:58 CST 2016
     */
    @Select({
        "select",
        "id, course_id, teacher_acccount, student_account, content, time, type, floor",
        "from comment"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="course_id", property="courseId", jdbcType=JdbcType.VARCHAR),
        @Result(column="teacher_acccount", property="teacherAcccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="student_account", property="studentAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="floor", property="floor", jdbcType=JdbcType.INTEGER)
    })
    List<Comment> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Fri Dec 09 17:24:58 CST 2016
     */
    @Update({
        "update comment",
        "set course_id = #{courseId,jdbcType=VARCHAR},",
          "teacher_acccount = #{teacherAcccount,jdbcType=VARCHAR},",
          "student_account = #{studentAccount,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "time = #{time,jdbcType=TIMESTAMP},",
          "type = #{type,jdbcType=INTEGER},",
          "floor = #{floor,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Comment record);
}